basePath: /v1/
definitions:
  app.Response:
    properties:
      code:
        type: integer
      data:
        type: object
      msg:
        type: string
    type: object
  v1.AddArticleForm:
    properties:
      content:
        type: string
      coverImageUrl:
        type: string
      createdBy:
        type: string
      desc:
        type: string
      state:
        type: integer
      tagID:
        type: integer
      title:
        type: string
    type: object
  v1.AddTagForm:
    properties:
      createdBy:
        type: string
      name:
        type: string
      state:
        type: integer
    type: object
  v1.EditArticleForm:
    properties:
      content:
        type: string
      coverImageUrl:
        type: string
      desc:
        type: string
      id:
        type: integer
      modifiedBy:
        type: string
      state:
        type: integer
      tagID:
        type: integer
      title:
        type: string
    type: object
  v1.EditTagForm:
    properties:
      id:
        type: integer
      modifiedBy:
        type: string
      name:
        type: string
      state:
        type: integer
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server Petstore server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: 测试 gin API
  version: "1.0"
paths:
  /api/v1/record/{some_id}:
    get:
      consumes:
      - application/json
      description: tag
      parameters:
      - description: userId
        in: path
        name: some_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
  /articles:
    get:
      parameters:
      - description: TagID
        in: query
        name: tag_id
        type: integer
      - description: State
        in: query
        name: state
        type: integer
      - description: CreatedBy
        in: query
        name: created_by
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.Response'
      summary: Get multiple articles
      tags:
      - ArticleController
    post:
      consumes:
      - application/json
      parameters:
      - description: Add articles form
        in: body
        name: form
        required: true
        schema:
          $ref: '#/definitions/v1.AddArticleForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.Response'
      summary: Add article
      tags:
      - ArticleController
  /articles/{id}:
    delete:
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.Response'
      summary: Delete article
      tags:
      - ArticleController
    get:
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.Response'
      summary: Get a single article By id
      tags:
      - ArticleController
    put:
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: EditArticleForm
        in: body
        name: from
        required: true
        schema:
          $ref: '#/definitions/v1.EditArticleForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.Response'
      summary: Update article
      tags:
      - ArticleController
  /auth:
    get:
      parameters:
      - description: Username
        in: query
        name: username
        required: true
        type: string
      - description: Password
        in: query
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.Response'
      summary: GetAuth
      tags:
      - Auth
  /tags:
    get:
      parameters:
      - description: Name
        in: query
        name: name
        type: string
      - description: State
        in: query
        name: state
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.Response'
      summary: Get multiple article tags
      tags:
      - TagController
    post:
      parameters:
      - description: AddTagForm
        in: body
        name: form
        required: true
        schema:
          $ref: '#/definitions/v1.AddTagForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.Response'
      summary: Add article tag
      tags:
      - TagController
  /tags/{id}:
    delete:
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.Response'
      summary: Delete article tag
      tags:
      - TagController
    put:
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: EditTagForm
        in: body
        name: form
        required: true
        schema:
          $ref: '#/definitions/v1.EditTagForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.Response'
      summary: Update article tag
      tags:
      - TagController
  /upload:
    post:
      parameters:
      - description: image
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.Response'
      summary: UploadFile
      tags:
      - FileSys
  /users/{id}:
    get:
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.Response'
      summary: Get user-svc profile by id
      tags:
      - UserController
swagger: "2.0"
